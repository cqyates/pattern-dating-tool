{"ast":null,"code":"import _objectSpread from \"/Users/coreyyates/Desktop/pattern-dating-tool/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/coreyyates/Desktop/pattern-dating-tool/client/src/Pages/Admin.js\";\nimport React, { Component } from \"react\";\nimport Input from \"../components/Input\";\nimport Hero from \"../components/Hero\";\nimport { Form, Container, Row, Card, Table, ProgressBar } from \"react-bootstrap\";\nimport DropMenu from \"../components/DropMenu\";\nimport Tesseract from \"tesseract.js\";\nimport API from \"../utils/API\";\nimport NavBar2 from \"../components/NavBar2\"; // import Login from \"../Pages/Login\"\n\nimport fire from \"../config/fire\";\nimport axios from \"axios\";\n\nclass Admin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //the image to be uploaded, used to be an array\n      uploads: [],\n      //this is the image as data\n      imgData: [],\n      //This is for tesseract\n      documents: [],\n      //this is the result of the regex\n      patterns: [],\n      catalog: {\n        //this is the mongoID of the selected company\n        companyID: null,\n        //this is the result of the season selection\n        season: \"\",\n        //this is the result of the year selection\n        year: \"\"\n      },\n      // this will be for login\n      user: {},\n      isLoading: false // This is for the admin login\n\n    };\n\n    this.handleCompanySelection = companyID => {\n      this.setState(state => {\n        return _objectSpread({}, state, {\n          catalog: _objectSpread({}, state.catalog, {\n            companyID: companyID\n          })\n        });\n      });\n    };\n\n    this.handleInputChange = event => {\n      let value = event.target.value;\n      const name = event.target.name;\n      this.setState(state => {\n        return _objectSpread({}, state, {\n          catalog: _objectSpread({}, state.catalog, {\n            [name]: value\n          })\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      if (event.target.files[0]) {\n        var uploads = [];\n\n        for (var key in event.target.files) {\n          if (!event.target.files.hasOwnProperty(key)) continue;\n          let upload = event.target.files[key];\n          uploads.push(URL.createObjectURL(upload));\n        }\n\n        this.setState({\n          uploads: uploads\n        });\n        this.uploadPhoto(event);\n      } else {\n        this.setState({\n          uploads: []\n        });\n      }\n    };\n\n    this.uploadPhoto = e => {\n      const file = e.target.files[0];\n      const formData = new FormData();\n      formData.append('file', file);\n      this.setState({\n        imgData: formData\n      }, () => console.log(this.state));\n    };\n\n    this.generateText = () => {\n      let upload = this.state.uploads;\n      return Tesseract.recognize(upload[0], {\n        lang: 'eng'\n      });\n    };\n\n    this.APIuploadPhoto = async () => {\n      try {\n        const textGeneration = await this.generateText().progress(progress => {\n          this.setState({\n            now: Math.floor(progress.progress * 100)\n          });\n        });\n        let pattern = /\\b\\d{4}\\b/g;\n        let patterns = textGeneration.text.match(pattern);\n        console.log(patterns);\n\n        const _ref = await axios({\n          method: \"POST\",\n          url: \"/api/imgupload\",\n          data: this.state.imgData\n        }),\n              filePath = _ref.data;\n\n        console.log(filePath);\n        var catalogData = {\n          companyId: this.state.catalog.companyID,\n          year: this.state.catalog.year,\n          season: this.state.catalog.season\n        };\n        const catResp = await API.postCat(catalogData);\n        var pageData = {\n          imgURL: filePath,\n          patterns: patterns,\n          catalog: catResp._id\n        };\n        const pageResp = await API.postPage(pageData);\n        this.setState({\n          pattern: patterns\n        });\n      } catch (error) {\n        console.log(error.message);\n        return error.message;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          user\n        });\n      } else {\n        this.setState({\n          user: null\n        });\n      }\n    });\n  } //this assigns a companyID number (from Mongo) when the user selects a company\n  //this is passed as a prop with DropMenu.  It is called on line 141. Works\n\n\n  //Here I need to have the state displayed in the table. Add a spinner to pattern number line while tesseract is running\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(NavBar2, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(Hero, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginTop: \"20px\",\n        marginRight: \"20px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        margin: \"auto\",\n        width: \"90%\",\n        padding: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Form, {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(DropMenu, {\n      handleChange: this.handleCompanySelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"seasonForm.ControlSelect1\",\n      style: {\n        marginLeft: \"10px\",\n        marginRight: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      style: {\n        borderColor: \"#758696\",\n        marginLeft: \"10px\",\n        marginRight: \"10px\"\n      },\n      value: this.state.season,\n      name: \"season\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"select season\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"fall\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"winter\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"spring\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"summer\"))), React.createElement(Input, {\n      as: \"text\",\n      name: \"year\",\n      placeholder: \"YYYY (required)\",\n      value: this.state.year,\n      onChange: this.handleInputChange,\n      style: {\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n        borderColor: \"#758696\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"hero\",\n      style: {\n        padding: \"10px\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"fileUploaderContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"fileUploader\",\n      style: {\n        topMargin: \"10px\"\n      },\n      onChange: this.handleChange,\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.APIuploadPhoto,\n      className: \"button\",\n      style: {\n        topMargin: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Start Uploading\"))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        margin: \"auto\",\n        width: \"90%\",\n        padding: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Table, {\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Company\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Season\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Year\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Pattern Numbers\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, this.state.catalog.companyID), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, this.state.catalog.season), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, this.state.catalog.year), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(ProgressBar, {\n      now: this.state.now,\n      label: \"\".concat(this.state.now, \"%\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"add upload button\"))))))), React.createElement(Hero, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/coreyyates/Desktop/pattern-dating-tool/client/src/Pages/Admin.js"],"names":["React","Component","Input","Hero","Form","Container","Row","Card","Table","ProgressBar","DropMenu","Tesseract","API","NavBar2","fire","axios","Admin","state","uploads","imgData","documents","patterns","catalog","companyID","season","year","user","isLoading","handleCompanySelection","setState","handleInputChange","event","value","target","name","handleChange","files","key","hasOwnProperty","upload","push","URL","createObjectURL","uploadPhoto","e","file","formData","FormData","append","console","log","generateText","recognize","lang","APIuploadPhoto","textGeneration","progress","now","Math","floor","pattern","text","match","method","url","data","filePath","catalogData","companyId","catResp","postCat","pageData","imgURL","_id","pageResp","postPage","error","message","componentDidMount","authListener","auth","onAuthStateChanged","render","marginTop","marginRight","marginLeft","margin","width","padding","display","justifyContent","borderColor","topMargin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Input from \"../components/Input\";\nimport Hero from \"../components/Hero\"\nimport { Form, Container, Row, Card, Table, ProgressBar } from \"react-bootstrap\";\nimport DropMenu from \"../components/DropMenu\";\nimport Tesseract from \"tesseract.js\";\nimport API from \"../utils/API\"\nimport NavBar2 from \"../components/NavBar2\"\n// import Login from \"../Pages/Login\"\nimport fire from \"../config/fire\"\nimport axios from \"axios\";\n\nclass Admin extends Component {\n  \n  state = {\n    //the image to be uploaded, used to be an array\n    uploads: [],\n    //this is the image as data\n    imgData: [],\n    //This is for tesseract\n    documents: [],\n    //this is the result of the regex\n    patterns: [],\n    catalog: {\n      //this is the mongoID of the selected company\n      companyID: null,\n      //this is the result of the season selection\n      season: \"\",\n      //this is the result of the year selection\n      year: \"\",\n    },\n    // this will be for login\n    user: {},\n    isLoading: false,\n  }\n  // This is for the admin login\n  componentDidMount(){\n    this.authListener();\n}\n    authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n        if (user) {\n            this.setState({ user });\n          } else {\n            this.setState({ user: null });\n        }\n      });\n    }\n\n  //this assigns a companyID number (from Mongo) when the user selects a company\n  //this is passed as a prop with DropMenu.  It is called on line 141. Works\n  handleCompanySelection = (companyID) => {\n    this.setState(state => {\n      return {\n        ...state,\n        catalog: {\n          ...state.catalog,\n          companyID: companyID\n        }\n      }\n    })\n  }\n\n  //This function should match all the names and values in the state. Lets change this to just be season and year.\n  //FIXME how to do that. I changed the way state works so it is an object for catalog with name, season and year attached to it\n  //this is so that this does not interfere with the upload functions.\n  handleInputChange = event => {\n    let value = event.target.value\n    const name = event.target.name;\n    this.setState(state => {\n      return {\n        ...state,\n        catalog: {\n          ...state.catalog,\n          [name]: value\n        }\n      }\n    })\n  }\n  //This functions adds the files you choose to the uploads array\n  handleChange = (event) => {\n    if (event.target.files[0]) {\n      var uploads = []\n      for (var key in event.target.files) {\n        if (!event.target.files.hasOwnProperty(key)) continue;\n        let upload = event.target.files[key]\n        uploads.push(URL.createObjectURL(upload))\n      }\n      this.setState({\n        uploads: uploads\n      })\n      this.uploadPhoto(event);\n    } else {\n      this.setState({\n        uploads: []\n      })\n    }\n  }\n  //I think that this pushes the images to the backend as form data\n  uploadPhoto = (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    this.setState({\n      imgData: formData\n    }, () => console.log(this.state))\n  }\n  //this starts the tesseract function called inside the APIuploadPhoto\n  generateText = () => {\n    let upload = this.state.uploads;\n    return Tesseract.recognize(upload[0], {\n      lang: 'eng'\n    })\n  }\n\n  //This is the main function for this page, it calls the tesseract and the uploadPhoto function\n  APIuploadPhoto = async () => {\n    try {\n      const textGeneration = await this.generateText()\n      .progress(progress => {\n        this.setState({\n          now: Math.floor(progress.progress * 100)\n        })\n      })\n\n      let pattern = /\\b\\d{4}\\b/g\n      let patterns = textGeneration.text.match(pattern);\n      console.log(patterns)\n\n      const {data:filePath} = await axios({\n        method: \"POST\",\n        url: \"/api/imgupload\",\n        data: this.state.imgData\n      })\n      console.log(filePath)\n\n      var catalogData = {\n        companyId: this.state.catalog.companyID,\n        year: this.state.catalog.year,\n        season: this.state.catalog.season,\n      }\n      const catResp = await API.postCat(catalogData);\n      \n      var pageData = {\n        imgURL: filePath,\n        patterns: patterns,\n        catalog: catResp._id,\n      }\n      const pageResp = await API.postPage(pageData);\n    \n      this.setState({\n        pattern: patterns\n    })\n    }\n    catch (error) {\n      console.log(error.message)\n      return error.message\n    }\n  }\n\n  //Here I need to have the state displayed in the table. Add a spinner to pattern number line while tesseract is running\n  render() {\n    return (\n      <div>\n        {/* This line will only send user to login page if they are signed in */}\n         {/* {this.state.user ? (<Admin />) : (<Login />)}  */}\n        <NavBar2 />\n        <Hero />\n        <Row style={{ marginTop: \"20px\", marginRight: \"20px\", marginLeft: \"20px\" }}>\n          <Container style={{ margin: \"auto\", width: \"90%\", padding: \"20px\" }}>\n            <Card>\n              <Form style={{ display: \"flex\", justifyContent: \"center\", padding: \"30px\" }}>\n                <DropMenu handleChange={this.handleCompanySelection} />\n                <Form.Group controlId=\"seasonForm.ControlSelect1\" style={{ marginLeft: \"10px\", marginRight: \"20px\" }}>\n                  <Form.Control as=\"select\" style={{ borderColor: \"#758696\", marginLeft: \"10px\", marginRight: \"10px\" }}\n                    value={this.state.season} name=\"season\" onChange={this.handleInputChange}>\n                    <option>select season</option>\n                    <option>fall</option>\n                    <option>winter</option>\n                    <option>spring</option>\n                    <option>summer</option>\n                  </Form.Control>\n                </Form.Group>\n                <Input as=\"text\" name=\"year\" placeholder=\"YYYY (required)\"\n                  value={this.state.year} onChange={this.handleInputChange} style={{ marginLeft: \"10px\", marginRight: \"10px\", borderColor: \"#758696\" }}>\n                </Input>\n              </Form>\n              <section className=\"hero\" style={{ padding: \"10px\", display:\"flex\"}}>\n              <label className=\"fileUploaderContainer\">\n                <input type=\"file\"\n                  id=\"fileUploader\"\n                  style={{ topMargin: \"10px\" }}\n                  onChange={this.handleChange} multiple />\n              </label>\n              <button onClick={this.APIuploadPhoto}\n                  className=\"button\"\n                  style={{ topMargin: \"10px\" }}>Start Uploading</button>\n            </section>\n            </Card>\n          </Container>\n        </Row>\n        <div>\n          <Container style={{ margin: \"auto\", width: \"90%\", padding: \"20px\" }}>\n            <Card>\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th>Company</th>\n                    <th>Season</th>\n                    <th>Year</th>\n                    <th>Pattern Numbers</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{this.state.catalog.companyID}</td>\n                    <td>{this.state.catalog.season}</td>\n                    <td>{this.state.catalog.year}</td>\n                    <td><ProgressBar now={this.state.now} label={`${this.state.now}%`} /></td>\n                    <td>add upload button</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          </Container>\n\n        </div>\n        <Hero />\n      </div>\n\n\n\n\n    )\n  }\n}\nexport default Admin;"]},"metadata":{},"sourceType":"module"}