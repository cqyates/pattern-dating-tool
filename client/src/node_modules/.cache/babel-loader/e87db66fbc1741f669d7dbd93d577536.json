{"ast":null,"code":"const adapter = require('./node/index.js');\n\nconst circularize = require('./common/circularize.js');\n\nconst TesseractJob = require('./common/job');\n\nconst version = require('../package.json').version;\n\nconst create = function (workerOptions = {}) {\n  var worker = new TesseractWorker(Object.assign({}, adapter.defaultOptions, workerOptions));\n  worker.create = create;\n  worker.version = version;\n  return worker;\n};\n\nclass TesseractWorker {\n  constructor(workerOptions) {\n    this.worker = null;\n    this.workerOptions = workerOptions;\n    this._currentJob = null;\n    this._queue = [];\n  }\n\n  recognize(image, options = {}) {\n    return this._delay(job => {\n      if (typeof options === 'string') options = {\n        lang: options\n      };\n      options.lang = options.lang || 'eng';\n\n      job._send('recognize', {\n        image,\n        options,\n        workerOptions: this.workerOptions\n      });\n    });\n  }\n\n  detect(image, options = {}) {\n    return this._delay(job => {\n      job._send('detect', {\n        image,\n        options,\n        workerOptions: this.workerOptions\n      });\n    });\n  }\n\n  terminate() {\n    if (this.worker) adapter.terminateWorker(this);\n    this.worker = null;\n    this._currentJob = null;\n    this._queue = [];\n  }\n\n  _delay(fn) {\n    if (!this.worker) this.worker = adapter.spawnWorker(this, this.workerOptions);\n    var job = new TesseractJob(this);\n\n    this._queue.push(e => {\n      this._queue.shift();\n\n      this._currentJob = job;\n      fn(job);\n    });\n\n    if (!this._currentJob) this._dequeue();\n    return job;\n  }\n\n  _dequeue() {\n    this._currentJob = null;\n\n    if (this._queue.length) {\n      this._queue[0]();\n    }\n  }\n\n  _recv(packet) {\n    if (packet.status === 'resolve' && packet.action === 'recognize') {\n      packet.data = circularize(packet.data);\n    }\n\n    if (this._currentJob.id === packet.jobId) {\n      this._currentJob._handle(packet);\n    } else {\n      console.warn('Job ID ' + packet.jobId + ' not known.');\n    }\n  }\n\n}\n\nmodule.exports = create();","map":null,"metadata":{},"sourceType":"script"}