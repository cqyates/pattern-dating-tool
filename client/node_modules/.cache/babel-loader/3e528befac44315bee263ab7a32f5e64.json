{"ast":null,"code":"var _jsxFileName = \"/Users/coreyyates/Desktop/pattern-dating-tool/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nconst Tesseract = window.Tesseract;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      if (event.target.files[0]) {\n        var uploads = [];\n\n        for (var key in event.target.files) {\n          if (!event.target.files.hasOwnProperty(key)) continue;\n          let upload = event.target.files[key];\n          uploads.push(URL.createObjectURL(upload));\n        }\n\n        this.setState({\n          uploads: uploads\n        });\n      } else {\n        this.setState({\n          uploads: []\n        });\n      }\n    };\n\n    this.generateText = () => {\n      let uploads = this.state.uploads;\n\n      for (var i = 0; i < uploads.length; i++) {\n        Tesseract.recognize(uploads[i], {\n          lang: 'eng'\n        }).catch(err => {\n          console.error(err);\n        }).then(result => {\n          console.lo; // Get Confidence score\n\n          let confidence = result.confidence; // Get full output\n\n          let text = result.text; // Get codes\n\n          let pattern = /\\b\\w{4,4}\\b/g;\n          let patterns = result.text.match(pattern); // Update state\n\n          this.setState({\n            patterns: this.state.patterns.concat(patterns),\n            documents: this.state.documents.concat({\n              pattern: patterns,\n              text: text,\n              confidence: confidence\n            })\n          });\n        });\n      }\n    };\n\n    this.state = {\n      uploads: [],\n      patterns: [],\n      documents: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"My OCR App\")), React.createElement(\"section\", {\n      className: \"hero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"fileUploaderContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Click here to upload documents\", React.createElement(\"input\", {\n      type: \"file\",\n      id: \"fileUploader\",\n      onChange: this.handleChange,\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.uploads.map((value, index) => {\n      return React.createElement(\"img\", {\n        key: index,\n        src: value,\n        width: \"100px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    })), React.createElement(\"button\", {\n      onClick: this.generateText,\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Generate\")), React.createElement(\"section\", {\n      className: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.documents.map((value, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"results__result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"results__result__image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.uploads[index],\n        width: \"250px\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"results__result__info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"results__result__info__codes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Confidence Score:\"), \" \", value.confidence)), React.createElement(\"div\", {\n        className: \"results__result__info__codes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Pattern Output:\"), \" \", value.pattern.map(pattern => {\n        return pattern + ', ';\n      }))), React.createElement(\"div\", {\n        className: \"results__result__info__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Full Output:\"), \" \", value.text))));\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/coreyyates/Desktop/pattern-dating-tool/src/App.js"],"names":["React","Component","Tesseract","window","App","constructor","props","handleChange","event","target","files","uploads","key","hasOwnProperty","upload","push","URL","createObjectURL","setState","generateText","state","i","length","recognize","lang","catch","err","console","error","then","result","lo","confidence","text","pattern","patterns","match","concat","documents","render","map","value","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst Tesseract = window.Tesseract;\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      uploads: [],\n      patterns: [],\n      documents: []\n    };\n  }\n\n  handleChange = (event) => {\n    if (event.target.files[0]) {\n      var uploads = []\n      for (var key in event.target.files) {\n        if (!event.target.files.hasOwnProperty(key)) continue;\n        let upload = event.target.files[key]\n        uploads.push(URL.createObjectURL(upload))\n      }\n      this.setState({\n        uploads: uploads\n      })\n    } else {\n      this.setState({\n        uploads: []\n      })\n    }\n  }\n\n  generateText = () => {\n    let uploads = this.state.uploads\n\n    for (var i = 0; i < uploads.length; i++) {\n      Tesseract.recognize(uploads[i], {\n        lang: 'eng'\n      })\n        .catch(err => {\n          console.error(err)\n        })\n        .then(result => {\n          console.lo\n          // Get Confidence score\n          let confidence = result.confidence\n\n          // Get full output\n          let text = result.text\n\n          // Get codes\n          let pattern = /\\b\\w{4,4}\\b/g\n          let patterns = result.text.match(pattern);\n\n          // Update state\n          this.setState({\n            patterns: this.state.patterns.concat(patterns),\n            documents: this.state.documents.concat({\n              pattern: patterns,\n              text: text,\n              confidence: confidence\n            })\n          })\n        })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"header\">\n          <h1>My OCR App</h1>\n        </header>\n\n        { /* File uploader */}\n        <section className=\"hero\">\n          <label className=\"fileUploaderContainer\">\n            Click here to upload documents\n    <input type=\"file\" id=\"fileUploader\" onChange={this.handleChange} multiple />\n          </label>\n\n\n\n          <div>\n            {this.state.uploads.map((value, index) => {\n              return <img key={index} src={value} width=\"100px\" />\n            })}\n          </div>\n\n          <button onClick={this.generateText} className=\"button\">Generate</button>\n        </section>\n\n        { /* Results */}\n        <section className=\"results\">\n          {this.state.documents.map((value, index) => {\n            return (\n              <div key={index} className=\"results__result\">\n                <div className=\"results__result__image\">\n                  <img src={this.state.uploads[index]} width=\"250px\" alt=\"\" />\n                </div>\n                <div className=\"results__result__info\">\n                  <div className=\"results__result__info__codes\">\n                    <small><strong>Confidence Score:</strong> {value.confidence}</small>\n                  </div>\n                  <div className=\"results__result__info__codes\">\n                    <small><strong>Pattern Output:</strong> {value.pattern.map((pattern) => { return pattern + ', ' })}</small>\n                  </div>\n                  <div className=\"results__result__info__text\">\n                    <small><strong>Full Output:</strong> {value.text}</small>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </section>\n      </div>\n    )\n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}